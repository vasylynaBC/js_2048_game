{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = initialState;\n        this.state = this.copyState(this.initialState);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"copyState\",\n            value: function copyState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyTiles = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 0) emptyTiles.push([\n                        row,\n                        col\n                    ]);\n                }\n                if (emptyTiles.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyTiles.length);\n                    var _emptyTiles_randomIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyTiles[randomIndex], 2), row1 = _emptyTiles_randomIndex[0], col1 = _emptyTiles_randomIndex[1];\n                    this.state[row1][col1] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var moved = this.move(\"left\");\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameState();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var moved = this.move(\"right\");\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameState();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status !== \"playing\") return;\n                var moved = this.move(\"up\");\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameState();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status !== \"playing\") return;\n                var moved = this.move(\"down\");\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameState();\n                }\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this;\n                var originalState = this.copyState(this.state);\n                var combineRow = function(row) {\n                    var newRow = row.filter(function(n) {\n                        return n !== 0;\n                    });\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        newRow[i] *= 2;\n                        newRow[i + 1] = 0;\n                        _this.score += newRow[i];\n                    }\n                    return newRow.filter(function(n) {\n                        return n !== 0;\n                    });\n                };\n                var moveRowLeft = function(row) {\n                    var newRow = combineRow(row);\n                    while(newRow.length < 4)newRow.push(0);\n                    return newRow;\n                };\n                var moveRowRight = function(row) {\n                    var copyRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                    var newRow = combineRow(copyRow.reverse());\n                    while(newRow.length < 4)newRow.push(0);\n                    return newRow.reverse();\n                };\n                var moveStateLeft = function(state) {\n                    return state.map(function(row) {\n                        return moveRowLeft(row);\n                    });\n                };\n                var moveStateRight = function(state) {\n                    return state.map(function(row) {\n                        return moveRowRight(row);\n                    });\n                };\n                switch(direction){\n                    case \"left\":\n                        this.state = moveStateLeft(this.state);\n                        break;\n                    case \"right\":\n                        this.state = moveStateRight(this.state);\n                        break;\n                    case \"up\":\n                        this.state = this.transposeState(moveStateLeft(this.transposeState(this.state)));\n                        break;\n                    case \"down\":\n                        this.state = this.transposeState(moveStateRight(this.transposeState(this.state)));\n                        break;\n                }\n                return !this.areStatesEqual(this.state, originalState);\n            }\n        },\n        {\n            key: \"checkGameState\",\n            value: function checkGameState() {\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 2048) {\n                        this.status = \"win\";\n                        return;\n                    }\n                }\n                if (this.hasEmptyCells() || this.canCombine()) return;\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"hasEmptyCells\",\n            value: function hasEmptyCells() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.state[row][col] === 0) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"canCombine\",\n            value: function canCombine() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var current = this.state[row][col];\n                    if (col < 3 && current === this.state[row][col + 1]) return true;\n                    if (row < 3 && current === this.state[row + 1][col]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"transposeState\",\n            value: function transposeState(state) {\n                var result = [];\n                for(var col = 0; col < 4; col++){\n                    result[col] = [];\n                    for(var row = 0; row < 4; row++)result[col].push(state[row][col]);\n                }\n                return result;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.addRandomTile();\n                    this.addRandomTile();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.copyState(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"areStatesEqual\",\n            value: function areStatesEqual(state1, state2) {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (state1[row][col] !== state2[row][col]) return false;\n                }\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button.start\");\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        $197cd56b15c33885$var$updateView();\n    }\n});\nfunction $197cd56b15c33885$var$updateView() {\n    var i = 0;\n    var state = $197cd56b15c33885$var$game.getState();\n    for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n        var cell = $197cd56b15c33885$var$cells[i];\n        cell.className = \"field-cell\";\n        if (state[row][col]) {\n            cell.textContent = state[row][col];\n            cell.classList.add(\"field-cell--\".concat(state[row][col]));\n        } else cell.textContent = \"\";\n        i++;\n    }\n    document.querySelector(\".game-score\").textContent = $197cd56b15c33885$var$game.getScore();\n    var statusGame = $197cd56b15c33885$var$game.getStatus();\n    if (statusGame === \"win\") document.querySelector(\".message-win\").classList.remove(\"hidden\");\n    else if (statusGame === \"lose\") document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n}\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$buttonStart.className === \"button restart\") $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$updateView();\n    document.querySelector(\".message-win\").classList.add(\"hidden\");\n    document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n    $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n    $197cd56b15c33885$var$buttonStart.className = \"button restart\";\n});\n\n})();\n//# sourceMappingURL=index.217c1ee5.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\nconst cells = document.querySelectorAll('.field-cell');\nconst buttonStart = document.querySelector('.button.start');\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === 'playing') {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateView();\n  }\n});\n\nfunction updateView() {\n  let i = 0;\n  const state = game.getState();\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const cell = cells[i];\n\n      cell.className = 'field-cell';\n\n      if (state[row][col]) {\n        cell.textContent = state[row][col];\n        cell.classList.add(`field-cell--${state[row][col]}`);\n      } else {\n        cell.textContent = '';\n      }\n      i++;\n    }\n  }\n\n  document.querySelector('.game-score').textContent = game.getScore();\n\n  const statusGame = game.getStatus();\n\n  if (statusGame === 'win') {\n    document.querySelector('.message-win').classList.remove('hidden');\n  } else if (statusGame === 'lose') {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nbuttonStart.addEventListener('click', () => {\n  if (buttonStart.className === 'button restart') {\n    game.restart();\n  }\n\n  game.start();\n  updateView();\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-start').classList.add('hidden');\n  buttonStart.textContent = 'Restart';\n  buttonStart.className = 'button restart';\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = initialState;\n    this.state = this.copyState(this.initialState);\n  }\n\n  copyState(state) {\n    return state.map((row) => [...row]);\n  }\n\n  addRandomTile() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          emptyTiles.push([row, col]);\n        }\n      }\n    }\n\n    if (emptyTiles.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyTiles.length);\n\n      const [row, col] = emptyTiles[randomIndex];\n\n      this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moved = this.move('left');\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameState();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moved = this.move('right');\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameState();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moved = this.move('up');\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameState();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moved = this.move('down');\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameState();\n    }\n  }\n\n  move(direction) {\n    const originalState = this.copyState(this.state);\n\n    const combineRow = (row) => {\n      const newRow = row.filter((n) => n !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] *= 2;\n          newRow[i + 1] = 0;\n          this.score += newRow[i];\n        }\n      }\n\n      return newRow.filter((n) => n !== 0);\n    };\n\n    const moveRowLeft = (row) => {\n      const newRow = combineRow(row);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      return newRow;\n    };\n\n    const moveRowRight = (row) => {\n      const copyRow = [...row];\n\n      const newRow = combineRow(copyRow.reverse());\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      return newRow.reverse();\n    };\n\n    const moveStateLeft = (state) => {\n      return state.map((row) => moveRowLeft(row));\n    };\n\n    const moveStateRight = (state) => {\n      return state.map((row) => moveRowRight(row));\n    };\n\n    switch (direction) {\n      case 'left':\n        this.state = moveStateLeft(this.state);\n        break;\n\n      case 'right':\n        this.state = moveStateRight(this.state);\n        break;\n\n      case 'up':\n        this.state = this.transposeState(\n          moveStateLeft(this.transposeState(this.state)),\n        );\n        break;\n\n      case 'down':\n        this.state = this.transposeState(\n          moveStateRight(this.transposeState(this.state)),\n        );\n        break;\n    }\n\n    return !this.areStatesEqual(this.state, originalState);\n  }\n\n  checkGameState() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 2048) {\n          this.status = 'win';\n\n          return;\n        }\n      }\n    }\n\n    if (this.hasEmptyCells() || this.canCombine()) {\n      return;\n    }\n    this.status = 'lose';\n  }\n\n  hasEmptyCells() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  canCombine() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const current = this.state[row][col];\n\n        if (col < 3 && current === this.state[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && current === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  transposeState(state) {\n    const result = [];\n\n    for (let col = 0; col < 4; col++) {\n      result[col] = [];\n\n      for (let row = 0; row < 4; row++) {\n        result[col].push(state[row][col]);\n      }\n    }\n\n    return result;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  restart() {\n    this.state = this.copyState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  areStatesEqual(state1, state2) {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (state1[row][col] !== state2[row][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","score","status","state","copyState","key","value","map","row","emptyTiles","col","push","randomIndex","Math","floor","random","_emptyTiles_randomIndex","_s","_e","_i","_arr","_n","_d","next","done","err","row1","col1","move","addRandomTile","checkGameState","direction","_this","originalState","combineRow","newRow","filter","moveRowLeft","moveRowRight","copyRow","reverse","moveStateLeft","moveStateRight","transposeState","areStatesEqual","hasEmptyCells","canCombine","current","result","state1","state2","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$buttonStart","querySelector","$197cd56b15c33885$var$updateView","getState","cell","className","textContent","classList","add","concat","getScore","statusGame","getStatus","remove","addEventListener","e","moveLeft","moveRight","moveUp","moveDown","restart","start"],"version":3,"file":"index.217c1ee5.js.map"}